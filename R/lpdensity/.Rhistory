X <- rt(1000000, df=10)
Y <- exp(X) / (1 + exp(X))
hist(Y)
hist(sort(Y)[1:100])
hist(sort(Y)[1:50])
hist(sort(Y)[1:10])
hist(sort(Y)[1:5])
hist(sort(Y)[1:100], breaks=10)
x <- seq(0.00001, 0.01)
y <- dt(x, df=10) / (x * (1-x))
plot(x, y)
x <- seq(0.00001, 0.01, 0.00001)
y <- dt(x, df=10) / (x * (1-x))
plot(x, y)
?dexp
x <- seq(0.00001, 0.01, 0.00001)
y <- dt(x, df=10) / (x * (1-x))
z <- dexp(x, rate=1) / (x * (1-x))
plot(x, y, type="l")
lines(x, z, col="red")
x <- seq(0.00001, 0.01, 0.00001)
y <- dt(x, df=10) / (x * (1-x))
z <- dexp(x, rate=10) / (x * (1-x))
plot(x, y, type="l")
lines(x, z, col="red")
library("TwoSampleMR")
package?TwoSampleMR
?extract_instruments
exposure_dat <- extract_instruments("ieu-a-2", p1 = 5e-08)
exposure_dat <- extract_instruments("ieu-a-2", p1 = 0)
exposure_dat <- extract_instruments("ieu-a-2", p1 = 0.9)
exposure_dat <- extract_instruments("ieu-a-2", p1 = 5e-06)
head(exposure_dat)
outcome_dat <- extract_outcome_data(snps=exposure_dat$SNP, outcomes="ieu-a-7")
head(outcome_dat)
hist(exposure_dat$beta.exposure)
hist(exposure_dat$beta.exposure, breaks=100)
nrows(exposure_dat)
nrow(exposure_dat)
exposure_dat <- extract_instruments("ieu-a-2", p1 = 5e-04)
nrow(exposure_dat)
hist(exposure_dat$beta.exposure, breaks=100)
hist(exposure_dat$beta.exposure / exposure_dat$se.exposure, breaks=100)
exposure_dat <- extract_instruments("ieu-a-2", p1 = 5e-02)
nrow(exposure_dat)
hist(exposure_dat$beta.exposure, breaks=100)
hist(exposure_dat$beta.exposure / exposure_dat$se.exposure, breaks=100)
qnorm(e-8)
qnorm(1e-8)
temp <- qnorm(5e-8 / 2) * -1
abline(h = temp)
hist(exposure_dat$beta.exposure / exposure_dat$se.exposure, breaks=100)
abline(v = temp)
sum(abs(exposure_dat$beta.exposure / exposure_dat$se.exposure) >= temp)
exposure_dat_full <- extract_instruments("ieu-a-2", p1 = 1)
nrow(exposure_dat_full)
exposure_dat_full <- extract_instruments("ieu-a-2", p1 = 0.1)
sum(abs(exposure_dat_full$beta.exposure / exposure_dat_full$se.exposure) >= temp)
hist(exposure_dat_full$beta.exposure / exposure_dat_full$se.exposure, breaks=100)
abline(v = temp)
install.package("hill")
install.packages("hill")
install.packages("evir")
library(evir)
hill(abs(exposure_dat_full$beta.exposure / exposure_dat_full$se.exposure))
?hill
hill(abs(exposure_dat_full$beta.exposure / exposure_dat_full$se.exposure), option="alpha")
write.csv(exposure_dat_full, "/Users/xinweima/Dropbox/999-Ma-Wang-Mendelian-Randomization/Code/exposure_dat_full")
library(lpdensity)
?lpdensity
?lpbwdensity
package?lpdensity
remove.packages("lpdensity")
install.packages("lpdensity")
library(lpdensity)
?lpdensity
library(lpdensity)
x <- rnorm(1000)
densEst <- lpdensity(x)
myGrid <- seq(-3,3,length=101)
plot(densEst,grid = myGrid)
library(lpdensity)
x <- rnorm(1000)
densEst <- lpdensity(x, grid=myGrid)
myGrid <- seq(-3,3,length=101)
plot(densEst,grid = myGrid)
library(lpdensity)
set.seed(42)
x <- rnorm(1000)
densEst <- lpdensity(x)
summary(densEst)
densEst$Estimate[, "bw"]
densEst$Estimate[, "grid"]
round(densEst$Estimate[, "grid"])
round(densEst$Estimate[, "grid"], 2)
library(lpdensity)
set.seed(42)
x <- rnorm(1000)
myGrid <- seq(-3,3,length=101)
densEst <- lpdensity(x, grid = myGrid)
plot(densEst)
library(lpdensity)
set.seed(123)
x <- rnorm(1000)
myGrid <- seq(-3,3,length=101)
densEst <- lpdensity(x, grid = myGrid)
plot(densEst)
library(lpdensity)
set.seed(123456)
x <- rnorm(1000)
myGrid <- seq(-3,3,length=101)
densEst <- lpdensity(x, grid = myGrid)
plot(densEst)
library(lpdensity)
set.seed(123456)
x <- rnorm(1000)
myGrid <- seq(-3,3,length=101)
myGridPlot <- myGrid[myGrid >= -1 & myGrid <= 2]
densEst <- lpdensity(x, grid = myGrid)
plot(densEst, grid = myGridPlot)
myGridPlot
?plot.lpdensity
library(lpdensity)
set.seed(123456)
x <- rnorm(1000)
myGrid <- seq(-3,3,length=101)
myGridPlot <- myGrid[myGrid >= -1 & myGrid <= 2]
densEst <- lpdensity(x, grid = myGrid)
plot(densEst, grid = 1)
plot(densEst, grid = 1)
# Generate a random sample
set.seed(42); X <- rnorm(2000)
# Generate a density discontinuity at 0
X <- X - 0.5; X[X>0] <- X[X>0] * 2
# Density estimation, left of 0 (scaled by the relative sample size)
est1 <- lpdensity(data = X[X<=0], grid = seq(-2.5, 0, 0.05), bwselect = "imse-dpi",
scale = sum(X<=0)/length(X))
# Density estimation, right of 0 (scaled by the relative sample size)
est2 <- lpdensity(data = X[X>0],  grid = seq(0, 2, 0.05), bwselect = "imse-dpi",
scale = sum(X>0)/length(X))
# Plot
plot(est1, est2, legendTitle="My Plot", legendGroups=c("Left", "Right"))
# Plot uniform confidence bands
set.seed(42) # fix the seed for simulating critical values
plot(est1, est2, legendTitle="My Plot", legendGroups=c("Left", "Right"), CIuniform=TRUE)
# Adding a histogram to the background
plot(est1, est2, legendTitle="My Plot", legendGroups=c("Left", "Right"),
hist=TRUE, histBreaks=seq(-2.4, 2, 0.2), histData=X)
# Plot point estimates for a subset of evaluation points
plot(est1, est2, legendTitle="My Plot", legendGroups=c("Left", "Right"),
type="both", CItype="all", grid=seq(-2, 2, 0.5))
library(lpdensity)
set.seed(123456)
x <- rnorm(1000)
myGrid <- seq(-3,3,length=101)
myGridPlot <- myGrid[myGrid >= -1 & myGrid <= 2]
densEst <- lpdensity(x, grid = myGrid)
plot(densEst, grid = myGridPlot, pty = "points", CItype = "ebar")
library(lpdensity)
set.seed(123456)
x <- rnorm(1000)
myGrid <- seq(-3,3,length=101)
myGridPlot <- myGrid[myGrid >= -1 & myGrid <= 2]
densEst <- lpdensity(x, grid = myGrid)
plot(densEst, grid = myGridPlot, pty = "both", CItype = "ebar")
library(lpdensity)
set.seed(123456)
x <- rnorm(1000)
myGrid <- seq(-3,3,length=101)
myGridPlot <- myGrid[myGrid >= -1 & myGrid <= 2]
densEst <- lpdensity(x, grid = myGrid)
plot(densEst, grid = myGridPlot, pty = "line", CItype = "ebar")
plot.lpdensity
set.seed(123456)
x <- rnorm(1000)
myGrid <- seq(-3,3,length=101)
myGridPlot <- myGrid[myGrid >= -1 & myGrid <= 2]
densEst <- lpdensity(x, grid = myGrid)
library(lpdensity)
set.seed(123456)
x <- rnorm(1000)
myGrid <- seq(-3,3,length=101)
myGridPlot <- myGrid[myGrid >= -1 & myGrid <= 2]
densEst <- lpdensity(x, grid = myGrid)
densEst$opt$v
a == ""
a = ""
is.null(a)
a == ""
a <- c(1,2,2)
?equal
a == a[1]
all(a == a[1])
a <- c(2,2,2)
all(a == a[1])
is.null("")
is.na("")
library(lpdensity)
# Generate a random sample
set.seed(42); X <- rnorm(2000)
# Generate a density discontinuity at 0
X <- X - 0.5; X[X>0] <- X[X>0] * 2
# Density estimation, left of 0 (scaled by the relative sample size)
est1 <- lpdensity(data = X[X<=0], grid = seq(-2.5, 0, 0.05), bwselect = "imse-dpi",
scale = sum(X<=0)/length(X))
# Density estimation, right of 0 (scaled by the relative sample size)
est2 <- lpdensity(data = X[X>0],  grid = seq(0, 2, 0.05), bwselect = "imse-dpi",
scale = sum(X>0)/length(X))
# Plot
plot(est1, est2, legendTitle="My Plot", legendGroups=c("Left", "Right"))
# Plot uniform confidence bands
set.seed(42) # fix the seed for simulating critical values
plot(est1, est2, legendTitle="My Plot", legendGroups=c("Left", "Right"), CIuniform=TRUE)
# Adding a histogram to the background
plot(est1, est2, legendTitle="My Plot", legendGroups=c("Left", "Right"),
hist=TRUE, histBreaks=seq(-2.4, 2, 0.2), histData=X)
# Plot point estimates for a subset of evaluation points
plot(est1, est2, legendTitle="My Plot", legendGroups=c("Left", "Right"),
type="both", CItype="all", grid=seq(-2, 2, 0.5))
plot(est1, est2, legendTitle="My Plot", legendGroups=c("Left", "Right"), ylabel="", xlabel="a", title="b")
plot(est1, est2, legendTitle="My Plot", legendGroups=c("Left", "Right"))
est1 <- lpdensity(data = X[X<=0], grid = seq(-2.5, 0, 0.05), bwselect = "imse-dpi",
scale = sum(X<=0)/length(X), v=0)
plot(est1, est2, legendTitle="My Plot", legendGroups=c("Left", "Right"))
est2 <- lpdensity(data = X[X>0],  grid = seq(0, 2, 0.05), bwselect = "imse-dpi",
scale = sum(X>0)/length(X),v=0)
plot(est1, est2, legendTitle="My Plot", legendGroups=c("Left", "Right"))
est1 <- lpdensity(data = X[X<=0], grid = seq(-2.5, 0, 0.05), bwselect = "imse-dpi",
scale = sum(X<=0)/length(X), v=2)
plot(est1, est2, legendTitle="My Plot", legendGroups=c("Left", "Right"))
est2 <- lpdensity(data = X[X>0],  grid = seq(0, 2, 0.05), bwselect = "imse-dpi",
scale = sum(X>0)/length(X),v=2)
plot(est1, est2, legendTitle="My Plot", legendGroups=c("Left", "Right"))
plot(est1, est2, legendTitle="My Plot", legendGroups=c("Left", "Right"), ylabel="")
est2 <- lpdensity(data = X[X>0],  grid = seq(0, 2, 0.05), bwselect = "imse-dpi",
scale = sum(X>0)/length(X),v=3)
est2 <- lpdensity(data = X[X>0],  grid = seq(0, 2, 0.05), bwselect = "imse-dpi",
scale = sum(X>0)/length(X),v=2)
plot(est1, est2, legendTitle="My Plot", legendGroups=c("Left", "Right"), ylabel="")
plot(est1, est2, legendTitle="My Plot", legendGroups=c("Left", "Right"))
est1 <- lpdensity(data = X[X<=0], grid = seq(-2.5, 0, 0.05), bwselect = "imse-dpi",
scale = sum(X<=0)/length(X), v=3)
est1 <- lpdensity(data = X[X<=0], grid = seq(-2.5, 0, 0.05), bwselect = "imse-dpi",
scale = sum(X<=0)/length(X), p=3,v=3)
plot(est1, est2, legendTitle="My Plot", legendGroups=c("Left", "Right"))
est1 <- lpdensity(data = X[X<=0], grid = seq(-2.5, 0, 0.05), bwselect = "imse-dpi",
scale = sum(X<=0)/length(X), p=3,v=2)
plot(est1, est2, legendTitle="My Plot", legendGroups=c("Left", "Right"))
plot(est1, est2, legendTitle="My Plot", legendGroups=c("Left", "Right"), ylabel="")
library(lpdensity)
library(lpdensity)
?plot.lpdensity
library(lpdensity)
library(lpdensity)
?plot.lpdensity
## Original code library(lpdensity) set.seed(123456)
x <- rnorm(1000)
densEst <- lpdensity(x)
myGrid <- seq(-3,3,length=101) plot(densEst,grid = myGrid)
## Original code library(lpdensity) set.seed(123456)
x <- rnorm(1000)
densEst <- lpdensity(x)
myGrid <- seq(-3,3,length=101); plot(densEst,grid = myGrid)
## Code 1
library(lpdensity)
set.seed(123456)
x <- rnorm(1000)
myGrid <- seq(-3,3,length=101)
densEst <- lpdensity(x, grid = myGrid); plot(densEst)
## Code 2
library(lpdensity)
set.seed(123456)
x <- rnorm(1000)
myGrid <- seq(-3,3,length=101)
myGridPlot <- myGrid[myGrid >= -1 & myGrid <= 2]
densEst <- lpdensity(x, grid = myGrid)
plot(densEst, grid = myGridPlot, type = "points", CItype = "ebar")
library(lpdensity)
library(lpdensity)
x <- rnorm(1000)
densEst <- lpdensity(x)
myGrid <- seq(-3,3,length=101) plot(densEst,grid = myGrid)
library(lpdensity)
x <- rnorm(1000)
densEst <- lpdensity(x)
myGrid <- seq(-3,3,length=101); plot(densEst,grid = myGrid)
library(lpdensity)
lpbwdensity(x)
summary(x)
bw <- lpbwdensity(x)
summary(bw)
summary(bw, gridIndex=1:20)
library(lpdensity)
summary(bw, gridIndex=1:20)
library(lpdensity)
summary(bw, gridIndex=1:20)
library(lpdensity)
summary(bw, grid=seq(-3,3,0.1)
)
summary(bw, grid=seq(-1.63,1.67,0.1))
summary(bw, grid=seq(-1.63,1.68,0.1))
summary(bw, grid=seq(-1.63,1.69,0.1))
summary(bw, grid=seq(-1.63,3,0.1))
summary(bw, grid=seq(-1.63,2,0.1))
summary(bw, grid=seq(-1.63,1.9,0.1))
bw$BW
summary(bw, grid=seq(-1.63,1.677,0.1))
summary(bw, grid=seq(-1.63,1.7,0.1))
summary(bw, grid=seq(-1.63,1.8,0.1))
summary(bw, grid=seq(-1.63,1.75,0.1))
bw$BW[, "grid"]
max(bw$BW[, "grid"])
summary(bw, grid=seq(-1.63,1.75,0.1))
summary(bw, grid=seq(-1.63,1.76,0.1))
summary(bw, grid=seq(-1.63,1.77,0.1))
summary(bw, grid=seq(-1.63,1.5,0.1))
summary(bw, grid=seq(-1.73,1.5,0.1))
summary(bw, grid=seq(-1.64,1.5,0.1))
summary(bw, grid=seq(-1.63,1.5,0.1))
summary(bw, grid=seq(-1.639,1.5,0.1))
summary(bw, grid=seq(-1.635,1.5,0.1))
summary(bw, grid=seq(-1.634,1.5,0.1))
summary(bw, grid=seq(-1.634,1.7,0.1))
summary(bw, grid=seq(-1.634,1.676,0.1))
summary(bw, grid=seq(-1.634,1.677,0.1))
library(lpdensity)
summary(bw, grid=seq(-1.634,1.676,0.1))
summary(bw, grid=seq(-1.634,1.677,0.1))
summary(bw, grid=seq(-1.634,1.678,0.1))
library(lpdensity)
summary(bw, grid=seq(-1.634,1.678,0.1))
library(lpdensity)
summary(bw, grid=seq(-1.634,1.678,0.1))
summary(bw, grid=seq(-1.634,1.677,0.001))
library(lpdensity)
summary(bw, grid=seq(-3,3,0.001)
)
library(lpdensity)
bw <- lpdensity(x)
summary(bw)
summary(bw, gridIndex=1:20)
summary(bw, grid=seq(-3,3,0.001))
summary(bw, grid=seq(-1.6,1.6, 0.01))
summary(bw, grid=seq(-1.6,1.67, 0.01))
summary(bw, grid=seq(-1.6,1.68, 0.01))
summary(bw, grid=seq(-1.68,1.68, 0.01))
max(c(), 1)
max(c(), 0)
library(lpdensity)
library(lpdensity)
x <- rnorm(1000)
densEst <- lpdensity(x)
myGrid <- seq(-3,3,length=101)
plot(densEst,grid = myGrid)
library(lpdensity)
x <- rnorm(1000)
densEst <- lpdensity(x)
myGrid <- seq(-1.6,1.6,length=101)
plot(densEst,grid = myGrid)
library(lpdensity)
x <- rnorm(1000)
densEst <- lpdensity(x)
myGrid <- seq(-1.6,1.9,length=101)
plot(densEst,grid = myGrid)
densEst <- lpdensity(x)
myGrid <- seq(-3,3,length=101)
plot(densEst,grid = myGrid)
densEst <- lpdensity(x, grid=seq(-3,3,length=101))
myGrid <- seq(-3,3,length=101)
plot(densEst,grid = myGrid)
library(lpdensity)
library(lpdensity)
library(lpdensity)
remove.packages(lpdensity)
remove.packages("lpdensity")
install.packages("~/Dropbox/0_Research/01_2017_LocPolDensity/Package_R_lpdensity/CRAN_submission/v1.0/lpdensity_1.0.tar.gz", repos = NULL, type = "source")
library("rddensity")
?rddensity
### Continuous Density
set.seed(42)
x <- rnorm(2000, mean = -0.5)
rdd <- rddensity(X = x, vce = "jackknife")
summary(rdd)
### Bandwidth selection using rdbwdensity()
rddbw <- rdbwdensity(X = x, vce = "jackknife")
summary(rddbw)
### Plotting using rdplotdensity()
# 1. From -2 to 2 with 25 evaluation points at each side
plot1 <- rdplotdensity(rdd, x, plotRange = c(-2, 2), plotN = 25)
library(lpdensity)
?lpdensity
?plot.lpdensity
x <- 1:100
t <- 100
((t+1) / 2)^2 / (sum((1:t-(t+1) / 2)^2))
t <- 100
((t+1) / 2)^2 / (sum((1:t-(t+1) / 2)^2)) * 12
t <- 10000
((t+1) / 2)^2 / (sum((1:t-(t+1) / 2)^2)) * 12
sum(((1:t)/t - (t+1)/(2*t)))
sum(((1:t)/t - (t+1)/(2*t))^2) / t
t <- 10000
sum(((1:t)/t - (t+1)/(2*t))^2) / t * 12
t <- 10
sum(((1:t)/t - (t+1)/(2*t))^2) / t * 12
t <- 100000000
sum(((1:t)/t - (t+1)/(2*t))^2) / t * 12
x <- 1:10000
y <- 1 + 2*x + rnorm(length(x))
temp <- lm(y ~ x)
summary(lm)
summary(temp)
(2.018e-02)^2 * length(x)
(3.495e-06)^2 * length(x)^3
x <- 1:10000
y <- 1 + 2*x + rnorm(length(x))
temp <- lm(y ~ x)
summary(temp)
(2.018e-02)^2 * length(x)
(3.495e-06)^2 * length(x)^3
x <- 1:10000
y <- 1 + 2*x + rnorm(length(x))
temp <- lm(y ~ x)
summary(temp)
(2.018e-02)^2 * length(x)
(3.495e-06)^2 * length(x)^3
x <- 1:10000
y <- 1 + 2*x + rnorm(length(x))
temp <- lm(y ~ x)
summary(temp)
(2.018e-02)^2 * length(x)
(3.495e-06)^2 * length(x)^3
x <- 1:10000
y <- 1 + 2*x + rnorm(length(x))
temp <- lm(y ~ x)
summary(temp)
(2.018e-02)^2 * length(x)
(3.495e-06)^2 * length(x)^3
x <- 1:10000
y <- 1 + 2*x + rnorm(length(x))
temp <- lm(y ~ x)
summary(temp)
(2.018e-02)^2 * length(x)
(3.495e-06)^2 * length(x)^3
x <- 1:10000
y <- 1 + 2*x + rnorm(length(x))
temp <- lm(y ~ x)
summary(temp)
(2.018e-02)^2 * length(x)
(3.495e-06)^2 * length(x)^3
x <- 1:10000
y <- 1 + 2*x + rnorm(length(x))
temp <- lm(y ~ x)
summary(temp)
(2.018e-02)^2 * length(x)
(3.495e-06)^2 * length(x)^3
x <- 1:10000
y <- 1 + 2*x + rnorm(length(x))
temp <- lm(y ~ x)
summary(temp)
(2.018e-02)^2 * length(x)
(3.495e-06)^2 * length(x)^3
x <- 1:10000
y <- 1 + 2*x + rnorm(length(x))
temp <- lm(y ~ x)
summary(temp)
(2.018e-02)^2 * length(x)
(3.495e-06)^2 * length(x)^3
x <- 1:10000
y <- 1 + 2*x + rnorm(length(x))
temp <- lm(y ~ x)
summary(temp)
(2.018e-02)^2 * length(x)
(3.495e-06)^2 * length(x)^3
x <- 1:10000
y <- 1 + 2*x + rnorm(length(x))
temp <- lm(y ~ x)
summary(temp)
(2.018e-02)^2 * length(x)
(3.495e-06)^2 * length(x)^3
x <- 1:10000
y <- 1 + 2*x + rnorm(length(x))
temp <- lm(y ~ x)
summary(temp)
3.391^2
remove.packages("lpdensity")
install.packages("lpdensity")
library(rddensity)
?rddensity
Examples
### Continuous Density
set.seed(42)
x <- rnorm(2000, mean = -0.5)
rdd <- rddensity(X = x, vce = "jackknife")
summary(rdd)
### Bandwidth selection using rdbwdensity()
rddbw <- rdbwdensity(X = x, vce = "jackknife")
summary(rddbw)
### Plotting using rdplotdensity()
# 1. From -2 to 2 with 25 evaluation points at each side
plot1 <- rdplotdensity(rdd, x, plotRange = c(-2, 2), plotN = 25)
library(lpdensity)
?lpdensity
library(lpdensity)
?lpdensity
library(lpdensity)
?lpdensity
library(lpdensity)
?lpdensity
package?lpdensity
library(lpdensity)
?lpdensity
